version: "3"

services:

  mongodb:
    image: mongo:4.2.10
    container_name: mongodb
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DATA_DB: ${MONGO_DATA_DB}
      MONGO_DATA_CONFIGDB: ${MONGO_DATA_CONFIGDB}
    volumes:
      - ${MONGO_DATA_DB}:/data/db
      - ${MONGO_DATA_CONFIGDB}:/data/configdb
    networks:
      - proxy
      - elastic
    ports:
      - 27017:27017
    labels:
      - traefik.enable=false
      - traefik.docker.network=proxy

  elasticsearch:
    image: elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${ES_DATA}:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic
    depends_on:
      - mongodb

#  logstash:
#    image: logstash:${ELK_VERSION}
#    container_name: logstash
#    command: bash -c "cd bin && logstash-plugin install logstash-input-mongodb && logstash-plugin install logstash-output-elasticsearch && logstash -f /usr/share/logstash/config/logstash.conf"
#    environment:
#      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
#    volumes:
#      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
#      - ./logstash.conf:/usr/share/logstash/config/logstash.conf
#      - /Users/mike/projects/gendercomics/logstash/:/opt/logstash-mongodb/
#    networks:
#      - elastic
#    depends_on:
#      - elasticsearch
#      - mongodb

  monstache:
    image: rwynn/monstache:6.7.6
    container_name: monstache
    command: -f ./app/monstache.config.toml
    volumes:
      - ./monstache.config.toml:/app/monstache.config.toml
    ports:
      - "9090:8080"
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - elastic
    healthcheck:
      test: "wget -q -O - http://localhost:9090/healthz"
      interval: 10s
      timeout: 30s
      retries: 300
    restart: unless-stopped

#  kibana:
#    image: kibana:${ELK_VERSION}
#    container_name: kibana
#    environment:
#      ELASTICSEARCH_HOSTS: http://localhost:9200
#    ports:
#      - 5601:5601
#    depends_on:
#      - elasticsearch

  gendercomics-api-stage:
    image: gendercomics/api:latest
    container_name: gendercomics-api-stage
    restart: always
    environment:
      - HOST
      - SPRING_PROFILES_ACTIVE=stage
      - MONGO_USERNAME=${MONGO_USERNAME_STAGE}
      - MONGO_PASSWORD=${MONGO_PASSWORD_STAGE}
    networks:
      - proxy
    depends_on:
      - mongodb
    labels:
      - traefik.frontend.rule=Host:api-stage.${HOST}
      - traefik.port=8001
      - traefik.docker.network=proxy

  gendercomics-api:
    image: gendercomics/api:1.12.0
    container_name: gendercomics-api
    restart: always
    environment:
      - HOST
      - SPRING_PROFILES_ACTIVE=production
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
    networks:
      - proxy
    depends_on:
      - mongodb
    labels:
      - traefik.frontend.rule=Host:api.${HOST}
      - traefik.port=8001
      - traefik.docker.network=proxy

networks:
  proxy:
    external: true
  elastic:
    driver: bridge
