# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build & Publish Docker image

on: [push]

jobs:
  checkout_repo:
    name: checkout git repo
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

  push_to_registry:
    needs: checkout_repo
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.3.0
        with:
          images: gendercomics/api
          tags: |
            type=ref,event=branch
            type=ref,event=tag
          flavor: |
            latest=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.6.1
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  copy_docker_compose:
    needs: [checkout_repo, push_to_registry]
    name: Copy docker-compose.yml to digitalocean.com
    runs-on: ubuntu-latest
    steps:
      - name: copy file via ssh key
        uses: mdallasanta/ssh-scp-deploy@v1.0.4
        with:
          local: './docker-compose.yml'                                                 # Local file path - REQUIRED false - DEFAULT ./
          remote: '/var/gendercomics/api'                                                # Remote file path - REQUIRED false - DEFAULT ~/
          host: ${{secrets.APP_HOST}}                                      # Remote server address - REQUIRED true
          user: ${{secrets.DEPLOY_USER}}                                      # Remote server user - REQUIRED true
          key: ${{secrets.DEPLOY_KEY}}                                        # Remote server private key - REQUIRED at least one of "password" or "key"
          pre_upload: ls -lh
          post_upload: echo "This will be executed after the upload!"  # Command to run via ssh after scp upload - REQUIRED false
